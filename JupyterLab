# Flipped Images with ratio
def random_flipped_img(images, labels, flip_ratio):
    num_flips = int(len(images) * flip_ratio)
    random_choice = np.random.choice(len(images), num_flips, replace=False)
    new_images = []
    new_labels = []
    for i, (img,label) in enumerate(zip(images,labels)):
        if i in random_choice:
            flipped_img = np.flip(img, axis=0)
            new_images.append(flipped_img)
            new_labels.append(1) # 1 for flip
        else:
            new_images.append(img)
            new_labels.append(0) # 0 for not flip
    return new_images, new_labels

# Load dataset
(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()
# Normalize the RGB values to be between 0 and 1
train_images = train_images / 255.0
test_images = test_images / 255.0
# Ratio of train and test (8:2)
train_images, test_images, train_labels, test_labels = train_test_split(train_images, train_labels, test_size=0.2, random_state=42)


# Total images of train and test set after apply ratio
total_train_num = int(len(train_images))
total_test_num = int(len(test_images))

print("Total images of train set:",len(train_images))
print("Total images of test set: ", len(test_images))

# Select random images from train set
random_indices_train = np.random.choice(len(train_images), total_train_num, replace=False)
selected_train_images = train_images[random_indices_train]
selected_train_labels = train_labels[random_indices_train]

# Select random images from test set
random_indices_test = np.random.choice(len(test_images), total_test_num, replace=False)
selected_test_images = test_images[random_indices_test]
selected_test_labels = test_labels[random_indices_test]

# Fiptting ratio
flip_ratio = 0.5
# train - images and labels after flippting randomly
flipped_train_images, flipped_train_labels = random_flipped_img(selected_train_images, selected_train_labels, flip_ratio)

# test - images and labels after flippting randomly
flipped_test_images, flipped_test_labels = random_flipped_img(selected_test_images, selected_test_labels, flip_ratio)
